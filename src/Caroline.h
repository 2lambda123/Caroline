/* Caroline.h generated by valac 0.40.23, the Vala compiler, do not modify */


#ifndef __CAROLINE_H__
#define __CAROLINE_H__

#include <glib.h>
#include <gtk/gtk.h>
#include <gee.h>
#include <float.h>
#include <math.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <cairo.h>

G_BEGIN_DECLS


#define TYPE_CAROLINE (caroline_get_type ())
#define CAROLINE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CAROLINE, Caroline))
#define CAROLINE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_CAROLINE, CarolineClass))
#define IS_CAROLINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CAROLINE))
#define IS_CAROLINE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_CAROLINE))
#define CAROLINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CAROLINE, CarolineClass))

typedef struct _Caroline Caroline;
typedef struct _CarolineClass CarolineClass;
typedef struct _CarolinePrivate CarolinePrivate;

#define CAROLINE_TYPE_CHART_COLOR (caroline_chart_color_get_type ())
typedef struct _CarolineChartColor CarolineChartColor;

#define CAROLINE_TYPE_POINT (caroline_point_get_type ())
typedef struct _CarolinePoint CarolinePoint;

#define TYPE_BAR (bar_get_type ())
#define BAR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BAR, Bar))
#define BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_BAR, BarClass))
#define IS_BAR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BAR))
#define IS_BAR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_BAR))
#define BAR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BAR, BarClass))

typedef struct _Bar Bar;
typedef struct _BarClass BarClass;
typedef struct _BarPrivate BarPrivate;

struct _CarolineChartColor {
	gdouble r;
	gdouble g;
	gdouble b;
};

struct _CarolinePoint {
	gdouble x;
	gdouble y;
};

struct _Caroline {
	GtkDrawingArea parent_instance;
	CarolinePrivate * priv;
	GeeArrayList* labelXList;
	GeeArrayList* chartColorArray;
	GeeArrayList* pointsArray;
	GeeArrayList* pointsCalculatedArray;
	GeeArrayList* pointsCalculatedBarArray;
	GeeArrayList* chartTypes;
};

struct _CarolineClass {
	GtkDrawingAreaClass parent_class;
};

struct _Bar {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BarPrivate * priv;
};

struct _BarClass {
	GTypeClass parent_class;
	void (*finalize) (Bar *self);
};


GType caroline_get_type (void) G_GNUC_CONST;
GType caroline_chart_color_get_type (void) G_GNUC_CONST;
CarolineChartColor* caroline_chart_color_dup (const CarolineChartColor* self);
void caroline_chart_color_free (CarolineChartColor* self);
GType caroline_point_get_type (void) G_GNUC_CONST;
CarolinePoint* caroline_point_dup (const CarolinePoint* self);
void caroline_point_free (CarolinePoint* self);
Caroline* caroline_new (gdouble* dataX,
                        int dataX_length1,
                        gdouble* dataY,
                        int dataY_length1,
                        gchar** chartTypeArray,
                        int chartTypeArray_length1,
                        gboolean generateColors,
                        gboolean scatterPlotLabels);
Caroline* caroline_construct (GType object_type,
                              gdouble* dataX,
                              int dataX_length1,
                              gdouble* dataY,
                              int dataY_length1,
                              gchar** chartTypeArray,
                              int chartTypeArray_length1,
                              gboolean generateColors,
                              gboolean scatterPlotLabels);
void caroline_arrayListSort (Caroline* self);
gchar* caroline_snipLongDouble (Caroline* self,
                                gdouble number);
gdouble caroline_get_spreadFinalY (Caroline* self);
void caroline_set_spreadFinalY (Caroline* self,
                                gdouble value);
gint caroline_get_widthPadding (Caroline* self);
void caroline_set_widthPadding (Caroline* self,
                                gint value);
gint caroline_get_rectangleXOffset (Caroline* self);
void caroline_set_rectangleXOffset (Caroline* self,
                                    gint value);
gint caroline_get_width (Caroline* self);
void caroline_set_width (Caroline* self,
                         gint value);
gint caroline_get_height (Caroline* self);
void caroline_set_height (Caroline* self,
                          gint value);
gdouble caroline_get_gap (Caroline* self);
void caroline_set_gap (Caroline* self,
                       gdouble value);
gdouble caroline_get_max (Caroline* self);
void caroline_set_max (Caroline* self,
                       gdouble value);
gdouble caroline_get_min (Caroline* self);
void caroline_set_min (Caroline* self,
                       gdouble value);
gint caroline_get_chartPadding (Caroline* self);
void caroline_set_chartPadding (Caroline* self,
                                gint value);
gdouble caroline_get_lineThicknessTicks (Caroline* self);
void caroline_set_lineThicknessTicks (Caroline* self,
                                      gdouble value);
gdouble caroline_get_lineThicknessPlane (Caroline* self);
void caroline_set_lineThicknessPlane (Caroline* self,
                                      gdouble value);
gdouble caroline_get_lineThicknessData (Caroline* self);
void caroline_set_lineThicknessData (Caroline* self,
                                     gdouble value);
gdouble caroline_get_spreadY (Caroline* self);
void caroline_set_spreadY (Caroline* self,
                           gdouble value);
gdouble caroline_get_spreadX (Caroline* self);
void caroline_set_spreadX (Caroline* self,
                           gdouble value);
const gchar* caroline_get_dataTypeY (Caroline* self);
void caroline_set_dataTypeY (Caroline* self,
                             const gchar* value);
const gchar* caroline_get_dataTypeX (Caroline* self);
void caroline_set_dataTypeX (Caroline* self,
                             const gchar* value);
const gchar* caroline_get_chartType (Caroline* self);
void caroline_set_chartType (Caroline* self,
                             const gchar* value);
gint caroline_get_pieChartXStart (Caroline* self);
void caroline_set_pieChartXStart (Caroline* self,
                                  gint value);
gint caroline_get_pieChartYStart (Caroline* self);
void caroline_set_pieChartYStart (Caroline* self,
                                  gint value);
gint caroline_get_pieChartRadius (Caroline* self);
void caroline_set_pieChartRadius (Caroline* self,
                                  gint value);
gint caroline_get_pieChartYLabelBStart (Caroline* self);
void caroline_set_pieChartYLabelBStart (Caroline* self,
                                        gint value);
gint caroline_get_pieChartYLabelBSpacing (Caroline* self);
void caroline_set_pieChartYLabelBSpacing (Caroline* self,
                                          gint value);
gint caroline_get_pieChartLabelBSize (Caroline* self);
void caroline_set_pieChartLabelBSize (Caroline* self,
                                      gint value);
gint caroline_get_pieChartLabelOffsetX (Caroline* self);
void caroline_set_pieChartLabelOffsetX (Caroline* self,
                                        gint value);
gint caroline_get_pieChartLabelOffsetY (Caroline* self);
void caroline_set_pieChartLabelOffsetY (Caroline* self,
                                        gint value);
gboolean caroline_get_scatterLabels (Caroline* self);
void caroline_set_scatterLabels (Caroline* self,
                                 gboolean value);
gpointer bar_ref (gpointer instance);
void bar_unref (gpointer instance);
GParamSpec* param_spec_bar (const gchar* name,
                            const gchar* nick,
                            const gchar* blurb,
                            GType object_type,
                            GParamFlags flags);
void value_set_bar (GValue* value,
                    gpointer v_object);
void value_take_bar (GValue* value,
                     gpointer v_object);
gpointer value_get_bar (const GValue* value);
GType bar_get_type (void) G_GNUC_CONST;
void bar_drawBarChart (Bar* self,
                       cairo_t* cr,
                       GeeArrayList* pointsArray);
Bar* bar_new (void);
Bar* bar_construct (GType object_type);


G_END_DECLS

#endif
